name: Symfony

on:
  push: ~
  release: ~

permissions:
  contents: read

jobs:
  PHPUnit:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - uses: actions/checkout@v3
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Create Database
        run: |
          mkdir -p data
          touch data/database.sqlite
      - name: Run migrations
        env:
          DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
        run: bin/console doctrine:migrations:migrate --allow-no-migration --no-interaction
      - name: Execute tests
        env:
          DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
        run: vendor/bin/phpunit --log-junit report_phpunit.xml
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: PHPUnit
          path: report_phpunit.xml
          reporter: java-junit

  CodeSniffer:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - uses: actions/checkout@v3
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Create Database
        run: |
          mkdir -p data
          touch data/database.sqlite
      - name: Code sniffer
        run: vendor/bin/phpcs -q --report=junit --report-file=report_phpcs.xml
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Code sniffer
          path: report_phpcs.xml
          reporter: java-junit

  PhpStan:
    runs-on: ubuntu-latest
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
      - uses: actions/checkout@v3
      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Create Database
        run: |
          mkdir -p data
          touch data/database.sqlite
      - name: Code sniffer
        run: vendor/bin/phpstan analyze --no-progress --error-format=junit > report_phpstan.xml
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: PHPStan
          path: report_phpstan.xml
          reporter: java-junit
